{"version":3,"sources":["constants/style.js","components/Gobang/Board.js","components/Gobang/calculateWinner.js","components/Gobang/useBoard.js","components/Gobang/Gobang.js","index.js"],"names":["GlobalStyle","createGlobalStyle","BoardWrap","styled","div","BoardRow","Square","Cell","props","color","Board","board","handleClickSquare","map","row","y","_","x","onClick","calculateWinner","i","j","useBoard","status","useState","Array","fill","setBoard","isBlack","setIsBlack","winner","console","log","newBoard","currentY","col","currentX","updateBoard","Wrap","Status","Title","h1","Reset","Gobang","window","location","reload","ReactDOM","render","document","getElementById"],"mappings":"2UAEA,IAUeA,EAVKC,YAAH,K,8qBCAjB,IAAMC,EAAYC,IAAOC,IAAV,KAMTC,EAAWF,IAAOC,IAAV,KAKRE,EAASH,IAAOC,IAAV,KAcNG,EAAOJ,IAAOC,IAAV,KAIM,SAACI,GAAD,OAAWA,EAAMC,SAmBlBC,EAhBD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,kBACtB,OACE,cAACV,EAAD,UACGS,EAAME,KAAI,SAACC,EAAKC,GAAN,OACT,cAACV,EAAD,UACGS,EAAID,KAAI,SAACG,EAAGC,GAAJ,OACP,cAACX,EAAD,CAAgBY,QAASN,EAAkBG,EAAGE,GAA9C,SACGN,EAAMI,GAAGE,IAAM,cAACV,EAAD,CAAME,MAAOE,EAAMI,GAAGE,MAD3BA,OAFFF,S,OCwBRI,EA9DS,SAACR,GAEvB,IAAK,IAAIS,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,GACkB,OAAhBV,EAAMS,GAAGC,IACTV,EAAMS,GAAGC,KAAOV,EAAMS,GAAGC,EAAI,IAC7BV,EAAMS,GAAGC,EAAI,KAAOV,EAAMS,GAAGC,EAAI,IACjCV,EAAMS,GAAGC,EAAI,KAAOV,EAAMS,GAAGC,EAAI,IACjCV,EAAMS,GAAGC,EAAI,KAAOV,EAAMS,GAAGC,EAAI,GAEjC,OAAOV,EAAMS,GAAGC,GAMtB,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,GACkB,OAAhBV,EAAMS,GAAGC,IACTV,EAAMS,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,IAC7BV,EAAMS,EAAI,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,IACjCV,EAAMS,EAAI,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,IACjCV,EAAMS,EAAI,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,GAEjC,OAAOV,EAAMS,GAAGC,GAMtB,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,GACkB,OAAhBV,EAAMS,GAAGC,IACTV,EAAMS,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACjCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACzCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACzCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,GAEzC,OAAOV,EAAMS,GAAGC,GAMtB,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,GACkB,OAAhBV,EAAMS,GAAGC,IACTV,EAAMS,GAAGC,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACjCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACzCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,IACzCV,EAAMS,EAAI,GAAGC,EAAI,KAAOV,EAAMS,EAAI,GAAGC,EAAI,GAEzC,OAAOV,EAAMS,GAAGC,ICLTC,EAhDE,WAAO,IAOlBC,EAPiB,EACKC,mBAASC,MAAM,IAAIC,KAAKD,MAAM,IAAIC,KAAK,QAD5C,mBACdf,EADc,KACPgB,EADO,OAGSH,oBAAS,GAHlB,mBAGdI,EAHc,KAGLC,EAHK,KAKfC,EAASX,EAAgBR,GAI7BY,EADEO,EACI,kBAAcA,GAEd,uBAAmBF,EAAU,QAAU,SA0B/C,MAAO,CACLjB,QACAgB,WACAC,UACAC,aACAC,SACAP,SACAX,kBAlBwB,SAACG,EAAGE,GAC5B,OAAO,WACLc,QAAQC,IAAIrB,EAAMI,GAAGE,IACjBE,EAAgBR,IAAUA,EAAMI,GAAGE,MAfvB,SAACF,EAAGE,EAAGgB,GACzBN,EACEhB,EAAME,KAAI,SAACC,EAAKoB,GACd,OAAIA,IAAanB,EAAUD,EACpBA,EAAID,KAAI,SAACsB,EAAKC,GACnB,OAAIA,IAAanB,EAAUkB,EACpBF,SAYXI,CAAYtB,EAAGE,EAAGW,EAAU,QAAU,SACtCC,GAAYD,Q,k/BC/BlB,IAAMU,EAAOnC,IAAOC,IAAV,KAEJmC,EAASpC,IAAOC,IAAV,KAWNoC,EAAQrC,IAAOsC,GAAV,KAMLC,EAAQvC,IAAOC,IAAV,KAgDIuC,EAnBA,WAAO,IAAD,EACkCrB,IAA7CX,EADW,EACXA,MAAOmB,EADI,EACJA,OAAQP,EADJ,EACIA,OAAQX,EADZ,EACYA,kBAC/B,OACE,eAAC0B,EAAD,WACE,cAAC,EAAD,IACA,cAACE,EAAD,iCACA,cAAC,EAAD,CAAO7B,MAAOA,EAAOC,kBAAmBA,IACxC,cAAC2B,EAAD,UACE,8BAAMhB,MAEPO,GACC,cAACY,EAAD,UACE,wBAAQxB,QAAS,kBAAM0B,OAAOC,SAASC,UAAvC,8BC7DVC,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.99e5955e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background-color: rgba(0,0,0,0.3);\n  }\n`;\nexport default GlobalStyle;\nexport const MEDIA_QUERY_MD = \"@media screen and (min-width: 768px)\";\nexport const MEDIA_QUERY_LG = \"@media screen and (min-width: 1000px)\";\n","import styled from \"styled-components\";\r\n\r\nconst BoardWrap = styled.div`\r\n  margin: 70px auto;\r\n  width: 532px;\r\n  height: 532px;\r\n`;\r\n\r\nconst BoardRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Square = styled.div`\r\n  background: #b4784f;\r\n  border: 1px solid black;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 34px;\r\n  height: 27px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 27px;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background: ${(props) => props.color};\r\n`;\r\n\r\nconst Board = ({ board, handleClickSquare }) => {\r\n  return (\r\n    <BoardWrap>\r\n      {board.map((row, y) => (\r\n        <BoardRow key={y}>\r\n          {row.map((_, x) => (\r\n            <Square key={x} onClick={handleClickSquare(y, x)}>\r\n              {board[y][x] && <Cell color={board[y][x]} />}\r\n            </Square>\r\n          ))}\r\n        </BoardRow>\r\n      ))}\r\n    </BoardWrap>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","const calculateWinner = (board) => {\r\n  // 檢查橫排\r\n  for (let i = 0; i < 19; i++) {\r\n    for (let j = 0; j < 15; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i][j + 1] &&\r\n        board[i][j + 1] === board[i][j + 2] &&\r\n        board[i][j + 2] === board[i][j + 3] &&\r\n        board[i][j + 3] === board[i][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 檢查直排\r\n  for (let i = 0; i < 15; i++) {\r\n    for (let j = 0; j < 19; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i + 1][j] &&\r\n        board[i + 1][j] === board[i + 2][j] &&\r\n        board[i + 2][j] === board[i + 3][j] &&\r\n        board[i + 3][j] === board[i + 4][j]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 檢查左上連右下\r\n  for (let i = 0; i < 15; i++) {\r\n    for (let j = 0; j < 15; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i + 1][j + 1] &&\r\n        board[i + 1][j + 1] === board[i + 2][j + 2] &&\r\n        board[i + 2][j + 2] === board[i + 3][j + 3] &&\r\n        board[i + 3][j + 3] === board[i + 4][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 檢查右上連左下\r\n  for (let i = 4; i < 19; i++) {\r\n    for (let j = 0; j < 15; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i - 1][j + 1] &&\r\n        board[i - 1][j + 1] === board[i - 2][j + 2] &&\r\n        board[i - 2][j + 2] === board[i - 3][j + 3] &&\r\n        board[i - 3][j + 3] === board[i - 4][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default calculateWinner;\r\n","import React, { useState } from \"react\";\r\nimport calculateWinner from \"./calculateWinner\";\r\n\r\nconst useBoard = () => {\r\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\r\n\r\n  const [isBlack, setIsBlack] = useState(true);\r\n\r\n  const winner = calculateWinner(board);\r\n\r\n  let status;\r\n  if (winner) {\r\n    status = `Winner: ${winner}`;\r\n  } else {\r\n    status = `Next player: ${isBlack ? \"Black\" : \"White\"}`;\r\n  }\r\n\r\n  const updateBoard = (y, x, newBoard) => {\r\n    setBoard(\r\n      board.map((row, currentY) => {\r\n        if (currentY !== y) return row;\r\n        return row.map((col, currentX) => {\r\n          if (currentX !== x) return col;\r\n          return newBoard;\r\n        });\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleClickSquare = (y, x) => {\r\n    return () => {\r\n      console.log(board[y][x]);\r\n      if (calculateWinner(board) || board[y][x]) {\r\n        return;\r\n      }\r\n      updateBoard(y, x, isBlack ? \"Black\" : \"White\");\r\n      setIsBlack(!isBlack);\r\n    };\r\n  };\r\n\r\n  return {\r\n    board,\r\n    setBoard,\r\n    isBlack,\r\n    setIsBlack,\r\n    winner,\r\n    status,\r\n    handleClickSquare,\r\n  };\r\n};\r\n\r\nexport default useBoard;\r\n","import styled from \"styled-components\";\r\nimport GlobalStyle from \"../../constants/style\";\r\nimport Board from \"./Board\";\r\nimport useBoard from \"./useBoard\";\r\n\r\nconst Wrap = styled.div``;\r\n\r\nconst Status = styled.div`\r\n  div {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    color: black;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  color: black;\r\n`;\r\n\r\nconst Reset = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    border: solid 1px white;\r\n    color: white;\r\n    font-size: 22px;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      background-color: black;\r\n      transition: background-color 0.2s, transform 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Gobang = () => {\r\n  const { board, winner, status, handleClickSquare } = useBoard();\r\n  return (\r\n    <Wrap>\r\n      <GlobalStyle />\r\n      <Title>五子棋</Title>\r\n      <Board board={board} handleClickSquare={handleClickSquare} />\r\n      <Status>\r\n        <div>{status}</div>\r\n      </Status>\r\n      {winner && (\r\n        <Reset>\r\n          <button onClick={() => window.location.reload()}>Play Again</button>\r\n        </Reset>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Gobang;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Gobang from \"./components/Gobang\";\n\nReactDOM.render(<Gobang />, document.getElementById(\"root\"));\n"],"sourceRoot":""}